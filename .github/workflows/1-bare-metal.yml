name: 1. bare-metal

on:
  workflow_dispatch:
    inputs:
      host:
        description: 'The IP address of the host to deploy to'
        required: true
        type: string
        default: '160.202.128.177'
      add_ec2_user:
        description: 'Add ec2 user? (true/false) ownership of docker passed to ec2 if selected'
        required: true
        default: true
        type: boolean

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install system dependencies #passlib needed for ec2-user
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install python3-pip
          python3 -m pip install --user -U ansible ansible-lint \
            jmespath molecule-plugins[docker] passlib
          python3 -m pip install --user 'requests==2.28.1'

      - name: Set up SSH key and test connection
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.QTRADE_LATITUDE_SSH_PRIVATE_KEY }}" > ~/.ssh/github-actions
          chmod 600 ~/.ssh/github-actions

          ssh-keyscan -t rsa,dsa,ecdsa,ed25519 ${{ github.event.inputs.host }} >> ~/.ssh/known_hosts

          ssh -vvv -o StrictHostKeyChecking=no -i ~/.ssh/github-actions ubuntu@${{ github.event.inputs.host }} "echo 'SSH successful'"

      - name: Set up Vault password file
        run: |
          mkdir -p  ~/.vault

          echo "${{ secrets.ANSIBLE_VAULT_PASS }}" > ~/.vault/ANSIBLE_VAULT_PASS_FILE
          chmod 600 ~/.vault/ANSIBLE_VAULT_PASS_FILE

      - name: Run Ansible playbook with SSH options
        run: |
          export ANSIBLE_SSH_ARGS="-o StrictHostKeyChecking=no"
          ansible-playbook bare-metal.yml -i ${{ github.event.inputs.host }}, -e remote_user=ubuntu --private-key ~/.ssh/github-actions --vault-password-file ~/.vault/ANSIBLE_VAULT_PASS_FILE -e ansible_python_interpreter=/usr/bin/python3 -e add_ec2_user=${{ github.event.inputs.add_ec2_user }}
        working-directory: infra/ansible/bare-metal/playbooks
